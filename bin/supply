#!/usr/bin/env bash
set -euo pipefail
# https://docs.cloudfoundry.org/buildpacks/understand-buildpacks.html

BUILD_DIR="${1}"
CACHE_DIR="${2}"
DEPS_DIR="${3}"
DEPS_IDX="${4}"

BUILDPACK_DIR=$(dirname $(readlink -f ${BASH_SOURCE%/*}))
source ${BUILDPACK_DIR}/parameters.sh

if [ -f "${BUILD_DIR}/runtime.txt" ]
then
    VECTOR_VERSION=$((grep -v '^#' "${BUILD_DIR}/runtime.txt" || true) | head -n1)
    if [ -z "${VECTOR_VERSION}" ]
    then
        echo "ERROR> runtime.txt found but no version specified!"
        exit 1
    fi
fi

if [ "$(echo -e "${VECTOR_MIN_VERSION}\n${VECTOR_VERSION}" | sort -V | head -n1)" == "${VECTOR_MIN_VERSION}" ]
then
    echo "-----> Requesting Vector ${VECTOR_VERSION}"
else
    echo "ERROR> Vector version ${VECTOR_VERSION} not supported by this buildpack"
    exit 1
fi

VECTOR_DOWNLOAD_URL="https://packages.timber.io/vector/${VECTOR_VERSION}/vector-${VECTOR_VERSION}-x86_64-unknown-linux-gnu.tar.gz"
if [ -f "${CACHE_DIR}/vector-${VECTOR_VERSION}.tar.gz" ]
then
    echo "-----> Using Vector ${VECTOR_VERSION} from cache"
else
    echo "-----> Downloading Vector: ${VECTOR_DOWNLOAD_URL}"
    if ! wget -nv "${VECTOR_DOWNLOAD_URL}" -O "${CACHE_DIR}/vector-${VECTOR_VERSION}.tar.gz" 2>&1 | sed 's/^/       /'
    then
        echo "ERROR> Vector version ${VECTOR_VERSION} not found, URL=${VECTOR_DOWNLOAD_URL}"
        exit 1
    fi
fi
